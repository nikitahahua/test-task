version: '3.8'

services:

  app:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - db
      - redis
    networks:
      - redis-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/cards
    healthcheck:
      test: ["CMD", "curl", "-f", "http://host.docker.internal:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - redis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cards
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    restart: always
    volumes:
      - postgres-data:/var/lib/postgres/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
  redisdata:

networks:
  redis-network:
    driver: bridge
